CREATE TABLE  CPU  (
  CPUId NUMBER PRIMARY KEY NOT NULL,
  CPUName VARCHAR2(100) NOT NULL,
  socketId NUMBER NOT NULL,
  brandId NUMBER NOT NULL,
  CPUSpeedMHZ NUMBER NOT NULL,
  coreCnt NUMBER NOT NULL,
  threadCnt NUMBER NOT NULL,
  wattage NUMBER NOT NULL
);

CREATE TABLE  CPUCooler  (
  CPUCoolerId NUMBER PRIMARY KEY NOT NULL,
  CPUCoolerName VARCHAR2(100) NOT NULL,
  socketId NUMBER NOT NULL
);

CREATE TABLE  CPURAMComp  (
  CompId NUMBER PRIMARY KEY NOT NULL,
  CPUId NUMBER NOT NULL,
  SpeedMHZ NUMBER NOT NULL,
  isLimit NUMBER(1)
);

CREATE TABLE  Sockets  (
  SocketId NUMBER PRIMARY KEY NOT NULL,
  socketName VARCHAR2(20)
);

CREATE TABLE  Mobo  (
  MoboId NUMBER PRIMARY KEY NOT NULL,
  MoboName VARCHAR2(255) NOT NULL,
  socketId NUMBER NOT NULL,
  formId NUMBER NOT NULL,
  brandId NUMBER NOT NULL,
  supportedRAMTypeId NUMBER NOT NULL,
  RAMSlotCount NUMBER NOT NULL
);

CREATE TABLE  MoboPCI  (
  MoboId NUMBER NOT NULL,
  PCIId NUMBER NOT NULL
);

CREATE TABLE  PCI  (
  PCIId NUMBER PRIMARY KEY NOT NULL,
  version NUMBER NOT NULL,
  width NUMBER NOT NULL
);

CREATE TABLE  Brands  (
  brandId NUMBER PRIMARY KEY NOT NULL,
  brandName VARCHAR2(100) NOT NULL
);

CREATE TABLE  RAM  (
  RAMId NUMBER PRIMARY KEY NOT NULL,
  RAMName VARCHAR2(255) NOT NULL,
  RAMTypeId NUMBER NOT NULL,
  brandId NUMBER NOT NULL,
  RAMSizeGB NUMBER NOT NULL,
  RAMSpeedMHZ NUMBER NOT NULL,
  stickCount NUMBER NOT NULL
);

CREATE TABLE  RAMType  (
  RAMTypeId NUMBER PRIMARY KEY NOT NULL,
  RAMTypeName VARCHAR2(20) NOT NULL
);

CREATE TABLE  GPU  (
  GPUId NUMBER PRIMARY KEY NOT NULL,
  GPUName VARCHAR2(255) NOT NULL,
  brandId NUMBER NOT NULL,
  GPUSpeedMHZ NUMBER NOT NULL,
  GPURAMSizeGB NUMBER NOT NULL,
  PCIPortId NUMBER NOT NULL,
  wattage NUMBER NOT NULL
);

CREATE TABLE  FormFactor  (
  formId NUMBER PRIMARY KEY NOT NULL,
  formName VARCHAR2(20) NOT NULL,
  widthMM NUMBER NOT NULL,
  heightMM NUMBER NOT NULL
);

CREATE TABLE  PCCase  (
  CaseId NUMBER PRIMARY KEY NOT NULL,
  CaseName VARCHAR2(255) NOT NULL,
  formId NUMBER NOT NULL,
  brandId NUMBER NOT NULL
);

CREATE TABLE  PSU  (
  PSUId NUMBER PRIMARY KEY NOT NULL,
  wattage NUMBER NOT NULL,
  quality NUMBER NOT NULL,
  brandId NUMBER NOT NULL
);

CREATE TABLE  PSUQuality  (
  PSUQualityId NUMBER PRIMARY KEY NOT NULL,
  qualityName VARCHAR2(50) NOT NULL,
  efficiency NUMBER NOT NULL
);

CREATE TABLE  Users  (
  userId NUMBER PRIMARY KEY NOT NULL,
  userName VARCHAR2(255) NOT NULL,
  password VARCHAR2(255) NOT NULL,
  regDate  DATE DEFAULT SYSDATE
);

CREATE TABLE  UserLog  (
  logId NUMBER PRIMARY KEY NOT NULL,
  userId NUMBER NOT NULL,
  action VARCHAR2(10) NOT NULL,
  actionTimestamp TIMESTAMP DEFAULT SYSTIMESTAMP,
  newUserName VARCHAR2(255),
  newPassword VARCHAR2(255),
  oldUserName VARCHAR2(255),
  oldPassword VARCHAR2(255),
  performedBy VARCHAR2(255) DEFAULT USER
);

CREATE TABLE  Builds  (
  buildId NUMBER PRIMARY KEY NOT NULL,
  buildName VARCHAR2(255) NOT NULL,
  cpu NUMBER NOT NULL,
  pccase NUMBER NOT NULL,
  psu NUMBER NOT NULL,
  cpuCooler NUMBER NOT NULL,
  mobo NUMBER NOT NULL,
  gpu NUMBER NOT NULL,
  ram NUMBER NOT NULL,
  wattage NUMBER NOT NULL
);

CREATE TABLE  SavedBuilds  (
  userId NUMBER NOT NULL,
  buildId NUMBER NOT NULL
);

CREATE TABLE Supplier (
  supplierId NUMBER PRIMARY KEY NOT NULL,
  supplierName VARCHAR2(255) NOT NULL
);

CREATE TABLE ProductType (
  productTypeId NUMBER PRIMARY KEY NOT NULL,
  productName VARCHAR2(50) NOT NULL
);

CREATE TABLE Supply (
  supplierId NUMBER NOT NULL,
  productTypeId NUMBER NOT NULL,
  productId NUMBER NOT NULL,
  price NUMBER NOT NULL
);

ALTER TABLE Supply ADD FOREIGN KEY (supplierId) REFERENCES Supplier (supplierId);
ALTER TABLE Supply ADD FOREIGN KEY (productTypeId) REFERENCES ProductType (productTypeId);
ALTER TABLE Supply ADD CONSTRAINT unique_supply UNIQUE (supplierId, productTypeId, productId);
ALTER TABLE Supply ADD CONSTRAINT supply_price_positive CHECK ( price > 0 );

ALTER TABLE CPU ADD FOREIGN KEY ( socketId ) REFERENCES  Sockets  ( SocketId );
ALTER TABLE CPU ADD FOREIGN KEY ( brandId ) REFERENCES  Brands  ( brandId );
ALTER TABLE CPU ADD CONSTRAINT cpu_wattage_positive CHECK ( wattage > 0 );

ALTER TABLE CPUCooler ADD FOREIGN KEY ( socketId ) REFERENCES  Sockets  ( SocketId );

ALTER TABLE CPURAMComp ADD FOREIGN KEY ( CPUId ) REFERENCES  CPU  ( CPUId );

ALTER TABLE Mobo ADD FOREIGN KEY ( socketId ) REFERENCES  Sockets  ( SocketId );
ALTER TABLE Mobo ADD FOREIGN KEY ( brandId ) REFERENCES  Brands  ( brandId );
ALTER TABLE Mobo ADD FOREIGN KEY ( supportedRAMTypeId ) REFERENCES  RAMType  ( RAMTypeId );
ALTER TABLE Mobo ADD FOREIGN KEY ( formId ) REFERENCES  FormFactor  ( formId );

ALTER TABLE MoboPCI ADD FOREIGN KEY ( MoboId ) REFERENCES  Mobo  ( MoboId );
ALTER TABLE MoboPCI ADD FOREIGN KEY ( PCIId ) REFERENCES  PCI  ( PCIId );

ALTER TABLE RAM ADD FOREIGN KEY ( brandId ) REFERENCES  Brands  ( brandId );
ALTER TABLE RAM ADD FOREIGN KEY ( RAMTypeId ) REFERENCES  RAMType  ( RAMTypeId );

ALTER TABLE GPU ADD FOREIGN KEY ( brandId ) REFERENCES  Brands  ( brandId );
ALTER TABLE GPU ADD FOREIGN KEY ( PCIPortId ) REFERENCES  PCI  ( PCIId );
ALTER TABLE GPU ADD CONSTRAINT gpu_wattage_positive CHECK ( wattage > 0 );

ALTER TABLE PCCase ADD FOREIGN KEY ( brandId ) REFERENCES  Brands  ( brandId );
ALTER TABLE PCCase ADD FOREIGN KEY ( formId ) REFERENCES  FormFactor  ( formId );

ALTER TABLE PSU ADD FOREIGN KEY ( quality ) REFERENCES  PSUQuality  ( PSUQualityId );
ALTER TABLE PSU ADD FOREIGN KEY ( brandId ) REFERENCES  Brands  ( brandId );
ALTER TABLE PSU ADD CONSTRAINT psu_wattage_positive CHECK ( wattage > 0 );

ALTER TABLE SavedBuilds ADD FOREIGN KEY ( userId ) REFERENCES  Users  ( userId );
ALTER TABLE SavedBuilds ADD FOREIGN KEY ( buildId ) REFERENCES  Builds  ( buildId );

ALTER TABLE Builds ADD FOREIGN KEY ( pccase ) REFERENCES  PCCase  ( CaseId );
ALTER TABLE Builds ADD FOREIGN KEY ( psu ) REFERENCES  PSU  ( PSUId );
ALTER TABLE Builds ADD FOREIGN KEY ( cpu ) REFERENCES  CPU  ( CPUId );
ALTER TABLE Builds ADD FOREIGN KEY ( cpuCooler ) REFERENCES  CPUCooler  ( CPUCoolerId );
ALTER TABLE Builds ADD FOREIGN KEY ( mobo ) REFERENCES  Mobo  ( MoboId );
ALTER TABLE Builds ADD FOREIGN KEY ( gpu ) REFERENCES  GPU  ( GPUId );
ALTER TABLE Builds ADD FOREIGN KEY ( ram ) REFERENCES  RAM  ( RAMId );

ALTER TABLE UserLog ADD FOREIGN KEY ( userId ) REFERENCES Users ( userId );
ALTER TABLE Users ADD CONSTRAINT unique_username UNIQUE (userName);